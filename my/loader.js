/**
 * ÂÆûÁé∞‰∏Ä‰∏™ÁÆÄÂçïÁöÑ commonjs Ê®°ÂùóÂä†ËΩΩÂô®Ôºå ÂÅèÊµèËßàÂô®Á´ØÁöÑÂÆûÁé∞
 * 
 * ÊåáÂØºÂáÜÂàôÔºö COMMONJS ËßÑËåÉ  --  ÁÅ´ÁãêÁöÑ‰∏Ä‰∏™Â∑•Á®ãÂ∏à
 * 
 * 2‰∏™ÈÉ®ÂàÜ
 * 
 * 1.Ê®°ÂùóÂä†ËΩΩÂô®ÔºöËß£ÊûêÊñá‰ª∂Âú∞ÂùÄÔºåÊúâ‰∏Ä‰∏™ÂØªÊâæÁöÑËßÑÂàôÔºåÁõÆÁöÑÊòØÊâæÂà∞Êñá‰ª∂
 * 2.Ê®°ÂùóËß£ÊûêÂô®Ôºö ÊâßË°åÊñá‰ª∂ÁöÑÂÜÖÂÆπÔºåNodeÈáåÈù¢ÊòØ‰ΩøÁî®‰∫ÜV8ÊâßË°åÁöÑ
 */

class Module {
  constructor(moduleName, source) {
    // Êö¥Èú≤Êï∞ÊçÆ
    this.exports = {};
    // ‰øùÂ≠ò‰∏Ä‰∏ãÊ®°ÂùóÁöÑ‰ø°ÊÅØ
    this.moduleName = moduleName;
    // ÁºìÂ≠ò
    this.$cacheModule = new Map();
    // Ê∫ê‰ª£Á†Å
    this.source = source;
  }

  /**
   * require
   * 
   * useage: require('./a.js')
   * 
   * @param {string} moduleName Ê®°ÂùóÁöÑÂêçÁß∞ ÂÖ∂ÂÆûÂ∞±ÊòØË∑ØÂæÑ‰ø°ÊÅØ
   * @param {string} source Êñá‰ª∂ÁöÑÊ∫ê‰ª£Á†ÅÔºå Âõ†‰∏∫ÁúÅÁï•‰∫ÜÂä†ËΩΩÂô®ÈÉ®ÂàÜÁöÑÂÆûÁé∞ ÊâÄ‰ª•ËøôÈáåÁõ¥Êé•‰º†ÂÖ•Êñá‰ª∂ÁöÑÊ∫ê‰ª£Á†Å
   * 
   * @return {object} require ËøîÂõûÁöÑÁªìÊûúÂ∞±ÊòØ exports ÁöÑÂºïÁî®
   */

  require = (moduleName, source) => {
    // ÊØè‰∏ÄÊ¨° require ÈÉΩÊâßË°åÊñá‰ª∂ÂÜÖÂÆπÁöÑËØù ÂºÄÈîÄÂ§™Â§ß  ÊâÄ‰ª•Âä†ÁºìÂ≠ò
    if (this.$cacheModule.has(moduleName)) {
      // Ê≥®ÊÑèÔºåËøîÂõûÁöÑÊòØ exports
      return this.$cacheModule.get(moduleName).exports;
    }

    // ÂàõÂª∫Ê®°Âùó
    const module = new Module(moduleName, source);

    // ÊâßË°åÊñá‰ª∂ÂÜÖÂÆπ, ÊâßË°åÊñá‰ª∂ÂÜÖÂÆπ‰∏ÄÂÆöË¶ÅÂú®ÁºìÂ≠ò‰πãÂâç
    const exports = this.compile(module, source);

    // ÊîæËøõÁºìÂ≠ò
    this.$cacheModule.set(moduleName, module);

    // ËøîÂõûexports
    return exports;
  }

  /**
   * Êãº‰∏Ä‰∏™Èó≠ÂåÖÂá∫Êù•ÔºåIIFE
   * @param {string} code ‰ª£Á†ÅÂ≠óÁ¨¶‰∏≤ 
   */
  $wrap = (code) => {
    const wrapper = [
      'return (function (module, exports, require) {',
      '\n});'
    ]

    return wrapper[0] + code + wrapper[1];
  }

  /**
   * ÁÆÄÂçïÂÆûÁé∞‰∏Ä‰∏™ËÉΩÂú®ÊµèËßàÂô®Ë∑ëÁöÑËß£ÈáäÂô® runInThisContext
   * Ê†∏ÂøÉÔºö ÂàõÂª∫‰∏Ä‰∏™ÈöîÁ¶ªÁöÑÊ≤ôÁÆ±ÁéØÂ¢É Êù•ÊâßË°åÊàë‰ª¨ÁöÑ‰ª£Á†ÅÂ≠óÁ¨¶‰∏≤
   * 
   * ÈöîÁ¶ªÔºö 
   * 1 A‰∏çËÉΩËÆøÈóÆÈó≠ÂåÖÁöÑÂèòÈáè
   * 2 B‰∏çËÉΩËÆøÈóÆÂÖ®Â±ÄÁöÑÂèòÈáè
   * 3 CÂè™ËÉΩËÆøÈóÆÊàë‰ª¨‰º†ÂÖ•ÁöÑÂèòÈáè
   * 
   * Ê≤ôÁÆ±Ôºö
   * 1 eval: ÂèØ‰ª•ËÆøÈóÆÂÖ®Â±ÄÔºå‰πüÂèØ‰ª•ËÆøÈóÆÈó≠ÂåÖÔºå‰ΩÜÊòØÈúÄË¶ÅËß£ÈáäÊâßË°åÔºåES5‰πãÂêé Â¶ÇÊûúÊòØÈó¥Êé•‰ΩøÁî®eval
   * -> (0, eval)('var a = b + 1'); ‰∏çÂèØ‰ª•ËÆøÈóÆÈó≠ÂåÖ
   * 2 new Function: ‰∏çÂèØ‰ª•ËÆøÈóÆÈó≠ÂåÖÔºå‰ΩÜÂèØ‰ª•ËÆøÈóÆÂÖ®Â±Ä Âè™ÁºñËØë‰∏ÄÊ¨° A
   * 3 with: with  ÂåÖË£πÁöÑÂØπË±°  ‰ºöË¢´ÊîæÂà∞ÂéüÂûãÈìæÁöÑÈ°∂ÈÉ® ËÄå‰∏îÂ∫ïÂ±ÇÊòØÈÄöËøá in Êìç‰ΩúÁ¨¶Âà§Êñ≠ÁöÑ
   *    with(Math) { function() {PI()} }
   *    Â¶ÇÊûúÈÄöËøáwith Â°ûÂÖ•Êàë‰ª¨‰º†ÂÖ•ÁöÑÊï∞ÊçÆ  C
   *    ‰∏çÁÆ°ÊòØÂï•Â±ûÊÄß ÈÉΩ‰ªéÊàë‰ª¨Â°ûÂÖ•ÁöÑÂØπË±°ÈáåÈù¢ÂèñÂÄº  Âèñ‰∏çÂà∞Â∞±ËøîÂõûundefinedÔºåËøôÊ†∑Â∞±Ê∞∏Ëøú‰∏ç‰ºöËÆøÈóÆÂÖ®Â±ÄÁöÑÂüü‰∫Ü B
   * 
   * unscopable Ëøô‰∏™ÂØπË±°ÊòØ‰∏çËÉΩÂ§üË¢´withÂ§ÑÁêÜÁöÑ
   * 
   * @param {string} code ‰ª£Á†ÅÂ≠óÁ¨¶‰∏≤ 
   */
  $runInThisContext = (code, whiteList = ['console']) => {
    // ‰ΩøÁî®with ‰øùËØÅÂèØ‰ª•ÈÄöËøáÊàë‰ª¨‰º†ÂÖ•ÁöÑ sandbox ÂØπË±°ÂèñÊï∞ÊçÆ
    // new Function: ‰∏çÂèØ‰ª•ËÆøÈóÆÈó≠ÂåÖ
    const func = new Function('sandbox', `with(sandbox) {${code}}`);

    return function(sandbox) { // Â°ûÂà∞Êñá‰ª∂Ê∫ê‰ª£Á†Å‰∏≠ÁöÑÂèòÈáè
      if (!sandbox || typeof sandbox !== 'object') {
        throw Error('sandbox parameter must be an object.');
      }
      // ‰ª£ÁêÜ
      const proxiedObject = new Proxy(sandbox, {
        // ‰∏ìÈó®Â§ÑÁêÜ in Êìç‰ΩúÁ¨¶ÁöÑ
        has(target, key) {
          if (!whiteList.includes(key)) {
            return true;
          }
        },
        get(target, key, receiver) {
          if (key === Symbol.unscopables) {
            return void 0;
          }
          return Reflect.get(target, key, receiver);
        }
      });

      return func(proxiedObject);
    }
  }

  /**
   * ÊâßË°åÊñá‰ª∂ÂÜÖÂÆπÔºå ÂÖ•ÂèÇÊòØÊñá‰ª∂Ê∫ê‰ª£Á†ÅÂ≠óÁ¨¶‰∏≤
   */
  compile = (module, source) => {
    const iifeString = this.$wrap(source)
    const compiler = this.$runInThisContext(iifeString)({});
    compiler.call(module, module, module.exports, this.require);

    return module.exports;
  }
}

/**
 * È™åËØÅ
 */

 const m = new Module();

 // a.js
 const sourceCodeFromAModule = `
   const b = require('b.js', 'exports.action = function() { console.log("execute action from B module successfully üéâ") }');
 
   b.action();
 `
 m.require('a.js', sourceCodeFromAModule);